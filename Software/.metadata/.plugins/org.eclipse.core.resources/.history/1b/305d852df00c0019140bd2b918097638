/*
 * main.c
 *
 *  Created on: Dec 28, 2018
 *      Author: Vijay Katoch
 */

#include "app.h"
#include "appweb/appweb.h"


/********************************* Code *******************************/
/*
    Run the handler. This is called when all input data has been received.
 */
static void readyRequest(HttpQueue *q)
{
    HttpConn    *conn;

    conn = q->conn;
    httpSetHeaderString(conn, "Custom-Date", conn->http->currentDate);
    httpSetStatus(conn, 200);

    /*
        Generate some dynamic data. If you generate a lot, this will buffer up to a configured maximum.
        If that limit is exceeded, the packet will be sent downstream and the response headers will be created.
     */
    httpWrite(q, "Hello World from PiTank\n");
    /*
        Call finalize when the response to the client is complete. Call httpFlushOutput if the response is
        incomplete and you wish to immediately send any buffered output.
    */
    httpFinalize(conn);
}



static void incomingRequest(HttpQueue *q, HttpPacket *packet)
{
    /*
        Do something with the incoming data packet
     */
    if (packet->content) {
        printf("Data in packet is %s\n", mprGetBufStart(packet->content));
    }
}


/*
    Module load initialization. This is called when the module is first loaded.
 */
int httpRequestHandlerInit(Http *http, MprModule *module)
{
    HttpStage   *stage;

    if ((stage = httpCreateHandler("requestHandler", module)) == 0) {
        return MPR_ERR_CANT_CREATE;
    }
    stage->ready = readyRequest;
    stage->incoming = incomingRequest;
    return 0;
}


int appMain()
{
    app_init();

    //return maRunWebServer("../src/webserver/appweb/config/appweb.conf");

    return 0;
}
